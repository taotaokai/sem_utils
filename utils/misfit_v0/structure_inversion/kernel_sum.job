#!/bin/bash
#SBATCH -J kernel_sum
#SBATCH -o kernel_sum.job.o%j
#SBATCH -N 14
#SBATCH -n 256
#SBATCH -p compute
#SBATCH -t 05:30:00
#SBATCH --mail-user=kai.tao@utexas.edu
#SBATCH --mail-type=begin
#SBATCH --mail-type=end

echo
echo "Start: JOB_ID=${SLURM_JOB_ID} [$(date)]"
echo

wkdir=$(pwd)
sem_utils=~/seiscode/sem_utils/
event_list=event.txt

nproc=256
mesh_dir=$wkdir/mesh/DATABASES_MPI
model_dir=$wkdir/model
hess_dir=$wkdir/hess_sum

mpiexec="mpirun -np 256"

# kernel preconditioner
source_gauss_width_km=200
receiver_gauss_width_km=100

#====== process each event kernel
for event_id in $(awk -F"|" 'NF&&$1!~/#/{print $9}' $event_list)
do
  echo "====== process $event_id"
  event_dir=$wkdir/$event_id
  out_dir=$event_dir/kernel
  mkdir $out_dir

  echo "------ convert cijkl to aijkl kernel [$(date)]"
  ${mpiexec} $sem_utils/bin/xsem_kernel_cijkl_rho_to_aijkl_rhoprime_in_tiso \
    $nproc $mesh_dir $model_dir \
    $event_dir/output_kernel/kernel \
    $out_dir

  echo "------ reduce aijkl kernel to dlnvs,kappa,eps,gamma kernel [$(date)]"
  ${mpiexec} $sem_utils/bin/xsem_kernel_aijkl_to_dlnvs_kappa_thomsen_elliptic \
    $nproc $mesh_dir $model_dir $out_dir $out_dir
  
  echo "------ make kernel mask [$(date)]"
  awk 'NR==6{print $0, a}' a=$source_gauss_width_km $event_dir/output_kernel/source.vtk > $out_dir/source.xyz
  awk 'NR>=6&&NF==3{print $0, a}' a=$receiver_gauss_width_km $event_dir/output_kernel/receiver.vtk >> $out_dir/source.xyz
  $mpiexec $sem_utils/bin/xsem_make_gaussian_mask \
    $nproc $mesh_dir \
    $out_dir/source.xyz \
    $out_dir "mask"
done

#====== sum up event kernels
echo "====== sum up event kernels [$(date)]"
awk -F"|" 'NF&&$1!~/#/{printf "%s/%s/kernel\n", a,$9}' \
  a="$wkdir" $event_list > kernel_dir.list

out_dir=$wkdir/kernel_sum
mkdir $out_dir

# raw kernel
for kernel_tag in dlnvs kappa eps gamma rhoprime
do
  echo ====== raw kernel: $kernel_tag
  ${mpiexec} $sem_utils/bin/xsem_sum_event_kernels_1 \
    $nproc $mesh_dir \
    kernel_dir.list ${kernel_tag}_kernel \
    0 "xxx" \
    $out_dir ${kernel_tag}_kernel
done

# preconditioned kernel
for kernel_tag in dlnvs kappa eps gamma rhoprime
do
  echo ====== preconditioned kernel: $kernel_tag

  echo ------ mask source/receiver
  ${mpiexec} $sem_utils/bin/xsem_sum_event_kernels_1 \
    $nproc $mesh_dir \
    kernel_dir.list ${kernel_tag}_kernel \
    1 "mask" \
    $out_dir ${kernel_tag}_kernel_mask

  echo ------ inverse hessian diagonals
  ${mpiexec} $sem_utils/bin/xsem_math \
    $nproc $mesh_dir \
    $out_dir ${kernel_tag}_kernel_mask \
    $hess_dir dlnvs_inv_hess_diag \
    "mul" \
    $out_dir ${kernel_tag}_kernel_precond

done

echo
echo "Done: JOB_ID=${SLURM_JOB_ID} [$(date)]"
echo
